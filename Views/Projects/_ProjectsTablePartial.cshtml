@model PaginatedList<BugscapeMVC.Models.Project>

@using BugscapeMVC.Services.Interfaces
@using BugscapeMVC.Models.Enums

@inject IFileService FileService
@inject IProjectService ProjectService

<table class="mb-4 w-full text-sm text-left text-dark font-lato">
    <thead class="text-xs bg-light uppercase">
        <tr>
            <th scope="col">
                <button type="button" data-page="@Model.CurrentPage" data-sort="name" data-order="@ViewData["SortOrder"]" data-sortable class="px-6 py-3 flex items-center gap-2">
                    <span class="whitespace-no-wrap text-xs uppercase">Name</span>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" title="Order" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 order">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3" />
                    </svg>
                </button>
            </th>
            <th scope="col">
                <button type="button" data-page="@Model.CurrentPage" data-sort="pm" data-order="@ViewData["SortOrder"]" data-sortable class="px-6 py-3 flex items-center gap-2">
                    <span class="whitespace-no-wrap text-xs uppercase">PM</span>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" title="Order" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 order">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3" />
                    </svg>
                </button>
            </th>
            <th scope="col">
                <button type="button" data-page="@Model.CurrentPage" data-sort="enddate" data-order="@ViewData["SortOrder"]" data-sortable class="px-6 py-3 flex items-center gap-2">
                    <span class="whitespace-no-wrap text-xs uppercase">Due</span>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" title="Order" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 order">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3" />
                    </svg>
                </button>
            </th>
            <th scope="col">
                <button type="button" data-page="@Model.CurrentPage" data-sort="priority" data-order="@ViewData["SortOrder"]" data-sortable class="px-6 py-3 flex items-center gap-2">
                    <span class="whitespace-no-wrap text-xs uppercase">priority</span>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" title="Order" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 order">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3" />
                    </svg>
                </button>
            </th>
            <th scope="col" class="px-6 py-3 whitespace-nowrap">
                Details
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            int rowNumber = 0;
        }

        @foreach (Project project in Model)
        {
            AppUser? projectManager = await ProjectService.GetProjectManagerAsync(project.Id);
            string rowColor = rowNumber % 2 == 0 ? "bg-lightest" : "bg-mid"; // Define row colors based on the counter.
            rowNumber++;
        
        <tr class="@rowColor border-b">
            <th scope="row" class="px-6 py-4 whitespace-nowrap">
                @project.Name
            </th>
            <td class="px-6 py-4">
                @if (projectManager is null)
                {
                    <span class="bg-gray-200 text-dark uppercase px-2 py-1 rounded-md text-xs font-bold">Unassigned</span>
                }
                else
                {
                    @if (projectManager?.AvatarFileData is null || projectManager?.AvatarContentType is null)
                    {
                        <img class="h-8 w-8 object-cover rounded-full" src="~/images/default-avatar.png" alt="@projectManager?.FullName">
                    }
                    else
                    {
                        <img class="h-8 w-8 object-cover rounded-full" src="@FileService.ConvertByteArrayToFile(projectManager.AvatarFileData, projectManager.AvatarContentType)" alt="@projectManager?.FullName">
                    }
                }
            </td>
            <td class="px-6 py-4">
                @project.EndDate.ToString("dd.MM.yyyy")
            </td>
            <td class="px-6 py-4">
                @{
                    string badgeClass = "bg-danger";

                    switch (project.ProjectPriority?.Name)
                    {
                        case nameof(Priorities.Urgent):
                            badgeClass = "bg-danger";
                            break;
                        case nameof(Priorities.High):
                            badgeClass = "bg-warning";
                            break;
                        case nameof(Priorities.Medium):
                            badgeClass = "bg-info";
                            break;
                        default:
                            badgeClass = "bg-success";
                            break;
                    }
                }
                <span class="uppercase px-2 py-1 @badgeClass rounded-md text-xs font-bold">@project.ProjectPriority?.Name</span>
            </td>
            <td class="px-6 py-4">
                <a asp-action="Details" asp-controller="Projects" title="Project Details" asp-route-id="@project.Id" class="block">
                    <svg xmlns="http://www.w3.org/2000/svg" title="Project Details" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 hover:scale-110 transition-transform">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                </a>
            </td>
        </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("~/Views/Projects/_ProjectsPaginationPartial.cshtml", Model)
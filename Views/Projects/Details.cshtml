@model BugscapeMVC.Models.Project
@using BugscapeMVC.Services.Interfaces
@using BugscapeMVC.Models.Enums
@using Microsoft.AspNetCore.Identity
@using System.Text.RegularExpressions
@using Humanizer

@inject IFileService FileService
@inject IProjectService ProjectService
@inject ITicketHistoryService HistoryService
@inject UserManager<AppUser> UserManager

@{
    ViewData["Title"] = "Project Details";

    AppUser? user = await UserManager.GetUserAsync(User);
    AppUser? ProjectManager = await ProjectService.GetProjectManagerAsync(Model.Id);

    var ticketHistories = await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, Model.CompanyId);

    var projectMembers = await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id);
}

<div class="grid grid-cols-12 justify-between gap-4 mb-6">
    <section aria-label="Project Description" class="col-span-12 lg:col-span-6 xl:col-span-7 rounded-md bg-white px-6 py-3 shadow-sm">
        <h1 class="font-rockwell text-dark text-xl font-bold mb-6">@Model.Name</h1>

        @if(Model.ImageFileData is not null && Model.ImageContentType is not null)
        {
            <img src="@FileService.ConvertByteArrayToFile(Model.ImageFileData, Model.ImageContentType)" alt="@Model.Name" class="mx-auto xl:float-right max-h-60 rounded-lg shadow-md xl:ml-4 mb-4">
        }

        <div class="prose max-w-none font-lato">@Html.Raw(Model.Description)</div>
    </section>

    <section aria-label="Project Details" class="rounded-md bg-white px-6 py-3 shadow-sm col-span-12 lg:col-span-6 xl:col-span-5">
        @{
            DateTime start = Model.StartDate.DateTime;
            DateTime end = Model.EndDate.DateTime;
            DateTime today = DateTime.Now;

            double percent = today >= end ? 100 :
                today < start ? 0 :
                Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
        }
        <h2 class="font-rockwell text-dark text-xl font-bold mb-6">Project Details</h2>
        
        <div class="grid grid-cols-2 gap-y-4">
            <div class="col-span-2">
                <p class="font-bold text-sm mb-2">Project Manager:</p>
                <div class="flex gap-2 items-center">
                    @if (ProjectManager is not null)
                    {
                        @if (ProjectManager.AvatarFileData is not null && ProjectManager.AvatarContentType is not null)
                        {
                            <img class="object-cover rounded-full" src="@FileService.ConvertByteArrayToFile(ProjectManager.AvatarFileData, ProjectManager.AvatarContentType)" alt="@ProjectManager.FullName" width="60" height="60">
                        }
                        else
                        {
                            <img class="rounded-full h-10 w-10" src="~/images/default-avatar.png" alt="@ProjectManager.FullName">
                        }

                        <div>
                            <p class="text-sm font-bold">@ProjectManager.FullName</p>
                            <a href="mailto:@ProjectManager.Email" class="text-xs block underline">@ProjectManager.Email</a>
                        </div>
                    }
                    else
                    {
                        <img class="rounded-full h-10 w-10 opacity-30" src="~/images/default-avatar.png" alt="Project Manager Profile">
                        <div class="space-y-2">
                            <p class="text-sm">Not Assigned</p>
                        </div>
                    }
                </div>
            </div>

            <div class="col-span-2 flex gap-2 items-center flex-wrap">
                @if (User.IsInRole(nameof(Roles.Admin)) || user?.Id == ProjectManager?.Id)
                {
                    @if (User.IsInRole(nameof(Roles.Admin)) && ProjectManager is null)
                    {
                        <a class="block w-fit bg-info text-white uppercase px-2 py-1 rounded-md text-xs font-bold hover:bg-opacity-80 transition-opacity" asp-action="AssignPM" asp-controller="Projects" asp-route-id="@Model.Id">Assign PM</a>
                    }
                    else if(User.IsInRole(nameof(Roles.Admin)))
                    {
                        <a class="block w-fit bg-info text-white uppercase px-2 py-1 rounded-md text-xs font-bold hover:bg-opacity-80 transition-opacity" asp-action="AssignPM" asp-controller="Projects" asp-route-id="@Model.Id">Change PM</a>

                    }

                    <a class="block w-fit bg-info text-white uppercase px-2 py-1 rounded-md text-xs font-bold hover:bg-opacity-80 transition-opacity" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
                }
            </div>
            
            <p class="font-bold text-sm mb-2">Project Progress:</p>
            <p class="font-normal text-sm">@percent%</p>

            <div class="col-span-2 -mt-4">
                <progress max="100" value="@percent" class="progress">
                    <div class="w-full bg-light rounded-full">
                        <span class="bg-info text-sm font-bold text-white text-center p-0.5 leading-none rounded-full" style="width: 45%">45%</span>
                    </div>
                </progress>
            </div>

            <p class="font-bold text-sm">Start Date:</p>
            <p class="text-sm">@Model.StartDate.ToString("dd MMM, yyyy")</p>

            <p class="font-bold text-sm">Deadline:</p>
            <p class="text-sm">@Model.EndDate.ToString("dd MMM, yyyy")</p>

            <p class="font-bold text-sm">Priority:</p>
            @{
                string badgeClass = "bg-danger";

                switch (Model.ProjectPriority?.Name)
                {
                    case nameof(Priorities.Urgent):
                        badgeClass = "bg-danger";
                        break;
                    case nameof(Priorities.High):
                        badgeClass = "bg-warning";
                        break;
                    case nameof(Priorities.Medium):
                        badgeClass = "bg-info";
                        break;
                    default:
                        badgeClass = "bg-success";
                        break;
                }
            }
            <span class="uppercase px-2 py-1 @badgeClass rounded-md text-xs font-bold w-fit">@Model.ProjectPriority?.Name</span>
            
            <p class="font-bold text-sm">Status:</p>
            @if (today >= start && today < end)
            {
                <span class="uppercase px-2 py-1 bg-success rounded-md text-xs font-bold w-fit">ACTIVE</span>
            }
            else
            {
                <span class="uppercase px-2 py-1 bg-danger rounded-md text-xs font-bold w-fit">INACTIVE</span>
            }
        </div>

        @if(User.IsInRole(nameof(Roles.Admin)) || user?.Id == ProjectManager?.Id)
        {
            <div>
                <hr class="my-4 h-[2px] rounded bg-mid border-0" />

                <div class="flex gap-4 items-center">
                    <a asp-action="Edit" asp-route-id="@Model.Id" title="Edit Project" class="bg-light hover:scale-110 transition-transform flex items-center justify-center rounded-full p-2">
                        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
                        </svg>
                    </a>
                    
                    @if (Model.Archived)
                    {
                        <a asp-action="Restore" asp-route-id="@Model.Id" title="Restore Project" class="bg-warning hover:scale-110 transition-transform flex items-center justify-center rounded-full p-2">
                            <svg xmlns="http://www.w3.org/2000/svg" aria-hidden fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
                            </svg>
                        </a>
                    }
                    else
                    {
                        <a asp-action="Archive" asp-route-id="@Model.Id" title="Archive Project" class="bg-danger hover:scale-110 transition-transform flex items-center justify-center rounded-full p-2">
                            <svg xmlns="http://www.w3.org/2000/svg" aria-hidden fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                            </svg>
                        </a>
                    }
                </div>
            </div>
        }
    </section>

    <section aria-label="Project Activity" class="col-span-12 lg:col-span-6 xl:col-span-7 shadow-sm rounded-md bg-white py-3 flex flex-col">
        <h2 class="font-rockwell text-dark text-xl font-bold mb-6 px-6">Project Activity</h2>

        @if (ticketHistories.Count == 0)
        {
            <p class="font-lato px-6">There is no activity to show.</p>
        }
        else
        {
            <div class="pl-6 scrollbar-thin scrollbar-thumb-light scrollbar-track-white overflow-y-auto max-h-[400px]">
                <ol class="relative border-s pr-6 border-light">                  
                    @foreach (TicketHistory history in ticketHistories.OrderByDescending(h => h.Created))
                    {
                        <li class="mb-10 ms-6">            
                            <a asp-action="Details" asp-controller="Members" asp-route-id="@history.User?.Id" class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-4 ring-mid">
                                @if (history.User?.AvatarFileData is null || history.User?.AvatarContentType is null)
                                {
                                    <img class="rounded-full shadow-lg" src="~/images/default-avatar.png"
                                        alt="@history.User?.FullName">
                                }
                                else
                                {
                                    <img class="rounded-full shadow-lg"
                                        src="@FileService.ConvertByteArrayToFile(history.User.AvatarFileData, history.User.AvatarContentType)"
                                        alt="@history.User?.FullName">
                                }
                            </a>
                            <div class="justify-between p-4 bg-white border border-gray-200 rounded-lg shadow-sm sm:flex">
                                <time class="mb-1 text-xs font-normal text-gray-400 sm:order-last sm:mb-0">@history.Created.Humanize()</time>
                                <div class="space-y-2">
                                    <a asp-action="Details" asp-controller="Tickets" asp-route-id="@history.TicketId" class="font-lato underline text-sm font-bold mb-2">@history.Ticket?.Title</a>
                                    @if (!string.IsNullOrEmpty(history.Description) && history.Description.Contains("New ticket created"))
                                    {
                                        <p class="text-sm font-lato">A new ticket was added by <a asp-action="Details" asp-controller="Members" asp-route-id="@history.User?.Id" class="underline">@history.User?.FullName</a>.</p>
                                    }
                                    else if (history.Property.Equals("TicketComment"))
                                    {
                                        <p class="text-sm font-lato">New comment added by <a asp-action="Details" asp-controller="Members" asp-route-id="@history.User?.Id" class="underline">@history.User?.FullName</a>.</p>
                                        <div class="p-3 text-xs italic font-normal text-gray-500 border border-gray-200 rounded-lg bg-gray-50">@history.Description</div>
                                    }
                                    else if (history.Property.Equals("TicketAttachment"))
                                    {
                                        <p class="text-sm font-lato">A ticket attachment was added by <a asp-action="Details" asp-controller="Members" asp-route-id="@history.User?.Id" class="underline">@history.User?.FullName</a>.</p>
                                    }
                                    else
                                    {
                                        <p class="text-sm font-lato"><b>@history.Property</b> was edited by <a asp-action="Details" asp-controller="Members" asp-route-id="@history.User?.Id" class="underline">@history.User?.FullName</a>.</p>
                                        @if (history.OldValue != null)
                                        {
                                            <p class="text-sm font-lato">Previous @history.Property: <span class="line-through">@Regex.Replace(history.OldValue, "<.*?>", string.Empty).Replace("_", " ")</span></p>
                                        }
                                        <p class="text-sm font-lato">Current @history.Property: @Regex.Replace(history.NewValue, "<.*?>", string.Empty).Replace("_", " ")</p>
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ol>
            </div>       
        }
    </section>

    <section aria-label="Project Members" class="col-span-12 lg:col-span-6 xl:col-span-5 shadow-sm rounded-md bg-white py-3 flex flex-col h-fit">
        @{
            ViewBag.SectionTitle = "Project Members";
            ViewBag.ProjectId = Model.Id;
        }
        <partial name="_TeamMembersPartial" model="@projectMembers" />
    </section>

    <section aria-label="Project Tickets" class="col-span-12 rounded-md bg-white px-6 py-3 flex flex-col">
        <h2 class="font-rockwell text-dark text-xl font-bold mb-6">Tickets</h2>

        @if (Model.Tickets is null || Model.Tickets.Count == 0)
        {
            <p class="font-lato flex flex-col gap-4 grow">There are currently no tickets to show.</p>
        }
        else
        {
            <div data-container="tickets"
                class="relative overflow-x-auto rounded-t-lg scrollbar-thin scrollbar-thumb-light scrollbar-track-white">
            </div>
        }

        <div>
            <hr class="my-4 h-[2px] rounded bg-mid border-0" />

            <a asp-action="Create" asp-controller="Tickets" asp-route-projectId="@Model.Id" class="flex items-center gap-2 w-fit group">
                <div
                    class="bg-success group-hover:bg-opacity-80 transition-opacity flex items-center justify-center rounded-full p-2">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="fill-white h-4 w-4">
                        <path id="Icon_awesome-plus" data-name="Icon awesome-plus"
                            d="M18.571,10.107H12.143V3.679A1.429,1.429,0,0,0,10.714,2.25H9.286A1.429,1.429,0,0,0,7.857,3.679v6.429H1.429A1.429,1.429,0,0,0,0,11.536v1.429a1.429,1.429,0,0,0,1.429,1.429H7.857v6.429A1.429,1.429,0,0,0,9.286,22.25h1.429a1.429,1.429,0,0,0,1.429-1.429V14.393h6.429A1.429,1.429,0,0,0,20,12.964V11.536A1.429,1.429,0,0,0,18.571,10.107Z"
                            transform="translate(0 -2.25)" />
                    </svg>
                </div>
                <span class="font-lato font-bold text-sm">Submit new ticket</span>
            </a>
        </div>
    </section>
</div>

@section scripts {
    <script src="~/js/ticketsTable.js"></script>

    <script>
        const container = document.querySelector('[data-container="tickets"]');
        const ticketsTable = new TicketsTable(@Html.Raw(Json.Serialize(Model.Tickets)), container, 1, 10, 'title', 'asc');

        ticketsTable.init();
    </script>
}
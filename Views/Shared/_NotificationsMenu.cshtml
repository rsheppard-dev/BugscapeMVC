@model List<BugscapeMVC.Models.Notification>

<button id="notifications_button" aria-describedby="notifications_menu" class="relative">
    @if (Model?.Where(n => !n.Viewed).ToList().Count > 0)
    {
        <div class="absolute border-lightest border -top-2 -right-2 bg-danger rounded-full w-5 h-5 text-lightest font-bold font-lato text-xs flex items-center justify-center">
            @Model?.Where(n => !n.Viewed).ToList().Count
        </div>
    }
    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden fill="none" viewBox="0 0 24 24" stroke-width="1.5"
        stroke="currentColor" class="w-6 h-6 stroke-dark ">
        <path stroke-linecap="round" stroke-linejoin="round"
            d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
    </svg>
</button>

<div id="notifications_menu" role="menu" class="overflow-hidden z-50 my-4 text-base list-none bg-zinc-700 divide-y divide-zinc-500 rounded-lg shadow">
    <div class="px-4 py-3">
        <a asp-controller="Notifications" asp-action="Inbox" class="text-sm text-white font-lato font-semibold">Notifications</a>
    </div>

    @if (Model?.Count > 0)
    {
        @foreach (var notification in Model.OrderByDescending(n => n.Created).Take(10))
        {
            <a asp-action="Details" asp-controller="Notifications" asp-route-id="@notification.Id" class="flex items-center gap-2 px-4 py-2 hover:bg-light transition-colors group @(notification.Viewed ? "" : "bg-dark")">
                @if (notification.Viewed)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 stroke-white group-hover:stroke-zinc-700">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M21.75 9v.906a2.25 2.25 0 0 1-1.183 1.981l-6.478 3.488M2.25 9v.906a2.25 2.25 0 0 0 1.183 1.981l6.478 3.488m8.839 2.51-4.66-2.51m0 0-1.023-.55a2.25 2.25 0 0 0-2.134 0l-1.022.55m0 0-4.661 2.51m16.5 1.615a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V8.844a2.25 2.25 0 0 1 1.183-1.981l7.5-4.039a2.25 2.25 0 0 1 2.134 0l7.5 4.039a2.25 2.25 0 0 1 1.183 1.98V19.5Z" />
                    </svg>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 stroke-white group-hover:stroke-zinc-700">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75" />
                    </svg>
                }
                <span class="text-white font-lato text-sm group-hover:text-zinc-700">@notification.Title</span>
            </a>
        }
    }
    else
    {
        <p class="font-lato text-sm text-white px-4 py-2">No notifications to show.</p>
    }

    @if (Model?.Count > 10)
    {
        <div class="px-4 py-3">
            <a asp-controller="Notifications" asp-action="Inbox" class="text-sm text-white font-lato" aria-label="View all notifications">View more...</a>
        </div>
    }
</div>

<script src="https://unpkg.com/@@popperjs/core@2"></script>
<script>
    const button = document.querySelector('#notifications_button');
    const notifications_menu = document.querySelector('#notifications_menu');

    Popper.createPopper(button, notifications_menu, {
        placement: 'bottom',
        modifiers: [
            {
                name: 'offset',
                options: {
                    offset: [0, 10],
                },
            },
        ],
    });

    function showNotificationsMenu() {
        notifications_menu.setAttribute('data-show', '');
        notifications_menu.setAttribute('aria-expanded', 'true');
    }

    function hideNotificationsMenu() {
        notifications_menu.removeAttribute('data-show');
        notifications_menu.removeAttribute('aria-expanded');
    }

    // Toggle the notifications menu when the button is clicked
    button.addEventListener('click', function(event) {
        event.stopPropagation();
        if (notifications_menu.hasAttribute('data-show')) {
            hideNotificationsMenu();
        } else {
            showNotificationsMenu();
        }
    });

    // Hide the notifications menu when clicking outside
    document.addEventListener('click', function() {
        if (notifications_menu.hasAttribute('data-show')) {
            hideNotificationsMenu();
        }
    });

    // Prevent the document's click event from hiding the menu when clicking on the menu itself
    notifications_menu.addEventListener('click', function(event) {
        event.stopPropagation();
    });
</script>